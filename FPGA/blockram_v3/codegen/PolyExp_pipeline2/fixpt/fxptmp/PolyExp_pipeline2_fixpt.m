%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%           Generated by MATLAB 9.7 and Fixed-Point Designer 6.4           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function [data_out_0, data_out_1, data_out_2] = PolyExp_pipeline2_fixpt( indata_0 ,indata_1 ,indata_2 ,indata_3,...
																   indata_4 ,indata_5 ,indata_6 ,indata_7,...
																   indata_8 ,indata_9 ,indata_10,indata_11,...
																   indata_12,indata_13,indata_14,indata_15,...
																   int0,int1,int2)
%--------------------------------------------								
fm = get_fimath();

n = fi(8, 0, 4, 0, fm);
%--------------------------------------------
g    = fi(zeros(1,17), 0, 14, 15, fm);
xg   = fi(zeros(1,17), 1, 14, 15, fm);
xxg  = fi(zeros(1,17), 0, 14, 15, fm);
%--------------------------------------------
g(1, 1) = 7.425750567660737e-11;  xg(1, 1) = -5.940600454128590e-10; xxg(1, 1) = 4.752480363302872e-09;
g(1, 2) = 1.357346656654903e-08;  xg(1, 2) = -9.501426596584319e-08; xxg(1, 2) = 6.650998617609023e-07;
g(1, 3) = 1.238932971502896e-06;  xg(1, 3) = -7.433597829017376e-06; xxg(1, 3) = 4.460158697410425e-05;
g(1, 4) = 5.646917756715771e-05;  xg(1, 4) = -2.823458878357885e-04; xxg(1, 4) = 0.001411729439179;
g(1, 5) = 0.001285225836022;      xg(1, 5) = -0.005140903344087;     xxg(1, 5) = 0.020563613376348;
g(1, 6) = 0.014606906292119;      xg(1, 6) = -0.043820718876357;     xxg(1, 6) = 0.131462156629071;
g(1, 7) = 0.082897614969052;      xg(1, 7) = -0.165795229938103;     xxg(1, 7) = 0.331590459876207;
g(1, 8) = 0.234926576512800;      xg(1, 8) = -0.234926576512800;     xxg(1, 8) = 0.234926576512800;
g(1, 9) = 0.332451909263490;      xg(1, 9) = 0.0;                    xxg(1, 9) = 0.0;
g(1,10) = 0.234926576512800;      xg(1,10) = 0.234926576512800;      xxg(1,10) = 0.234926576512800;
g(1,11) = 0.082897614969052;      xg(1,11) = 0.165795229938103;      xxg(1,11) = 0.331590459876207;
g(1,12) = 0.014606906292119;      xg(1,12) = 0.043820718876357;      xxg(1,12) = 0.131462156629071;
g(1,13) = 0.001285225836022;      xg(1,13) = 0.005140903344087;      xxg(1,13) = 0.020563613376348;
g(1,14) = 5.646917756715771e-05;  xg(1,14) = 2.823458878357885e-04;  xxg(1,14) = 0.001411729439179;
g(1,15) = 1.238932971502896e-06;  xg(1,15) = 7.433597829017376e-06;  xxg(1,15) = 4.460158697410425e-05;
g(1,16) = 1.357346656654903e-08;  xg(1,16) = 9.501426596584319e-08;  xxg(1,16) = 6.650998617609023e-07;
g(1,17) = 7.425750567660737e-11;  xg(1,17) = 5.940600454128590e-10;  xxg(1,17) = 4.752480363302872e-09;		 
%--------------------------------------------
data_0_buf = fi(indata_0, 0, 8, 0, fm);
data_1_buf = fi(indata_1, 0, 8, 0, fm);
data_2_buf = fi(indata_2, 0, 8, 0, fm);
data_3_buf = fi(indata_3, 0, 8, 0, fm);
data_4_buf = fi(indata_4, 0, 8, 0, fm);
data_5_buf = fi(indata_5, 0, 8, 0, fm);
data_6_buf = fi(indata_6, 0, 8, 0, fm);
data_7_buf = fi(indata_7, 0, 8, 0, fm);
data_8_buf = fi(indata_8, 0, 8, 0, fm);
data_9_buf = fi(indata_9, 0, 8, 0, fm);
data_10_buf = fi(indata_10, 0, 8, 0, fm);
data_11_buf = fi(indata_11, 0, 8, 0, fm);
data_12_buf = fi(indata_12, 0, 8, 0, fm);
data_13_buf = fi(indata_13, 0, 8, 0, fm);
data_14_buf = fi(indata_14, 0, 8, 0, fm);
data_15_buf = fi(indata_15, 0, 8, 0, fm);
int0_buf = fi(int0, 0, 14, 6, fm);
int1_buf = fi(int1, 1, 14, 6, fm);
int2_buf = fi(int2, 0, 14, 5, fm);

for k = fi(1, 0, 1, 0, fm): n
	g0 = fi(g(1,k+fi(9, 0, 4, 0, fm)), 0, 14, 16, fm);
	g1 = fi(xg(1,k+fi(9, 0, 4, 0, fm)), 0, 14, 16, fm);
	g2 = fi(xxg(1,k+fi(9, 0, 4, 0, fm)), 0, 14, 15, fm);
	if k == fi(1, 0, 1, 0, fm)
		srow_0 = fi(data_0_buf, 0, 8, 0, fm);
		srow_1 = fi(data_8_buf, 0, 8, 0, fm);
	elseif k == fi(2, 0, 2, 0, fm)
		srow_0 = fi(data_1_buf, 0, 8, 0, fm);
		srow_1 = fi(data_9_buf, 0, 8, 0, fm);
	elseif k == fi(3, 0, 2, 0, fm)
		srow_0 = fi(data_2_buf, 0, 8, 0, fm);
		srow_1 = fi(data_10_buf, 0, 8, 0, fm);
	elseif k == fi(4, 0, 3, 0, fm)
		srow_0 = fi(data_3_buf, 0, 8, 0, fm);
		srow_1 = fi(data_11_buf, 0, 8, 0, fm);
	elseif k == fi(5, 0, 3, 0, fm)
		srow_0 = fi(data_4_buf, 0, 8, 0, fm);
		srow_1 = fi(data_12_buf, 0, 8, 0, fm);
	elseif k == fi(6, 0, 3, 0, fm)
		srow_0 = fi(data_5_buf, 0, 8, 0, fm);
		srow_1 = fi(data_13_buf, 0, 8, 0, fm);
	elseif k == fi(7, 0, 3, 0, fm)
		srow_0 = fi(data_6_buf, 0, 8, 0, fm);
		srow_1 = fi(data_14_buf, 0, 8, 0, fm);
	elseif k == fi(8, 0, 4, 0, fm)
		srow_0 = fi(data_7_buf, 0, 8, 0, fm);
		srow_1 = fi(data_15_buf, 0, 8, 0, fm);
	else
		srow_0 = fi(0.0, 0, 8, 0, fm);
		srow_1 = fi(0.0, 0, 8, 0, fm);
	end
			
	p = fi(srow_1 + srow_0, 0, 9, 0, fm);
	q = fi(fi_signed(srow_1) - srow_0, 1, 9, 0, fm);

	outt0 = fi(int0_buf + g0 * p, 0, 14, 6, fm);
	outt1 = fi(int1_buf + g1 * q, 1, 14, 6, fm);
	outt2 = fi(int2_buf + g2 * p, 0, 14, 5, fm);
	%----------------------
	int0_buf(:) = outt0;
	int1_buf(:) = outt1;
	int2_buf(:) = outt2;
	%----------------------
end
data_out_0 = fi(int0_buf, 0, 14, 6, fm);
data_out_1 = fi(int1_buf, 1, 14, 6, fm);
data_out_2 = fi(int2_buf, 0, 14, 5, fm);
end



function y = fi_signed(a)
    coder.inline( 'always' );
    if isfi( a ) && ~(issigned( a ))
        nt = numerictype( a );
        new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
        y = fi( a, new_nt, fimath( a ) );
    else
        y = a;
    end
end

function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
