-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\USER\Desktop\Farneback_blockRAM\blockram_v2\codegen\UpdateFlow_pipeline1\hdlsrc\UpdateFlow_pipeline1_fixpt.vhd
-- Created: 2020-06-19 13:32:28
-- 
-- Generated by MATLAB 9.7, MATLAB Coder 4.3 and HDL Coder 3.15
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- dx                            ce_out        1
-- dy                            ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: UpdateFlow_pipeline1_fixpt
-- Source Path: UpdateFlow_pipeline1_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.UpdateFlow_pipeline1_fixpt_pkg.ALL;

ENTITY UpdateFlow_pipeline1_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        data_in_1                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En4
        data_in_2                         :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En6
        data_in_3                         :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14_En4
        data_in_4                         :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En5
        data_in_5                         :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En4
        ce_out                            :   OUT   std_logic;
        dx                                :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En1
        dy                                :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En2
        );
END UpdateFlow_pipeline1_fixpt;


ARCHITECTURE rtl OF UpdateFlow_pipeline1_fixpt IS

  -- Constants
  CONSTANT One                            : signed(48 DOWNTO 0) := 
    signed'("0100000000000000000000000000000000000000000000000");  -- sfix49
  CONSTANT C_divbyzero_p                  : signed(48 DOWNTO 0) := 
    signed'("0111111111111111111111111111111111111111111111111");  -- sfix49

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL data_in_1_unsigned               : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL in_0_pipe_reg                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL data_in_1_1                      : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL data_in_2_signed                 : signed(13 DOWNTO 0);  -- sfix14_En6
  SIGNAL in_1_pipe_reg                    : vector_of_signed14(0 TO 1);  -- sfix14 [2]
  SIGNAL data_in_2_1                      : signed(13 DOWNTO 0);  -- sfix14_En6
  SIGNAL data_in_3_unsigned               : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL in_2_pipe_reg                    : vector_of_unsigned14(0 TO 1);  -- ufix14 [2]
  SIGNAL data_in_3_1                      : unsigned(13 DOWNTO 0);  -- ufix14_En4
  SIGNAL data_in_4_signed                 : signed(13 DOWNTO 0);  -- sfix14_En5
  SIGNAL in_3_pipe_reg                    : vector_of_signed14(0 TO 1);  -- sfix14 [2]
  SIGNAL data_in_4_1                      : signed(13 DOWNTO 0);  -- sfix14_En5
  SIGNAL data_in_5_signed                 : signed(13 DOWNTO 0);  -- sfix14_En4
  SIGNAL in_4_pipe_reg                    : vector_of_signed14(0 TO 1);  -- sfix14 [2]
  SIGNAL data_in_5_1                      : signed(13 DOWNTO 0);  -- sfix14_En4
  SIGNAL dx_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En1
  SIGNAL dy_tmp                           : signed(13 DOWNTO 0);  -- sfix14_En2

BEGIN
  data_in_1_unsigned <= unsigned(data_in_1);

  enb <= clk_enable;

  in_0_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      in_0_pipe_reg <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        in_0_pipe_reg(0) <= data_in_1_unsigned;
        in_0_pipe_reg(1) <= in_0_pipe_reg(0);
      END IF;
    END IF;
  END PROCESS in_0_pipe_process;

  data_in_1_1 <= in_0_pipe_reg(1);

  data_in_2_signed <= signed(data_in_2);

  in_1_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      in_1_pipe_reg <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        in_1_pipe_reg(0) <= data_in_2_signed;
        in_1_pipe_reg(1) <= in_1_pipe_reg(0);
      END IF;
    END IF;
  END PROCESS in_1_pipe_process;

  data_in_2_1 <= in_1_pipe_reg(1);

  data_in_3_unsigned <= unsigned(data_in_3);

  in_2_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      in_2_pipe_reg <= (OTHERS => to_unsigned(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        in_2_pipe_reg(0) <= data_in_3_unsigned;
        in_2_pipe_reg(1) <= in_2_pipe_reg(0);
      END IF;
    END IF;
  END PROCESS in_2_pipe_process;

  data_in_3_1 <= in_2_pipe_reg(1);

  data_in_4_signed <= signed(data_in_4);

  in_3_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      in_3_pipe_reg <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        in_3_pipe_reg(0) <= data_in_4_signed;
        in_3_pipe_reg(1) <= in_3_pipe_reg(0);
      END IF;
    END IF;
  END PROCESS in_3_pipe_process;

  data_in_4_1 <= in_3_pipe_reg(1);

  data_in_5_signed <= signed(data_in_5);

  in_4_pipe_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      in_4_pipe_reg <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        in_4_pipe_reg(0) <= data_in_5_signed;
        in_4_pipe_reg(1) <= in_4_pipe_reg(0);
      END IF;
    END IF;
  END PROCESS in_4_pipe_process;

  data_in_5_1 <= in_4_pipe_reg(1);

  UpdateFlow_pipeline1_fixpt_1_output : PROCESS (data_in_1_1, data_in_2_1, data_in_3_1, data_in_4_1, data_in_5_1)
    VARIABLE b1 : signed(46 DOWNTO 0);
    VARIABLE tmp : signed(48 DOWNTO 0);
    VARIABLE idet : unsigned(13 DOWNTO 0);
    VARIABLE div_temp : signed(48 DOWNTO 0);
    VARIABLE mul_temp : unsigned(27 DOWNTO 0);
    VARIABLE sub_cast : signed(33 DOWNTO 0);
    VARIABLE mul_temp_0 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(33 DOWNTO 0);
    VARIABLE sub_temp : signed(33 DOWNTO 0);
    VARIABLE add_cast : signed(46 DOWNTO 0);
    VARIABLE cast : signed(14 DOWNTO 0);
    VARIABLE mul_temp_1 : signed(28 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(31 DOWNTO 0);
    VARIABLE mul_temp_2 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(31 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(31 DOWNTO 0);
    VARIABLE cast_0 : signed(14 DOWNTO 0);
    VARIABLE mul_temp_3 : signed(46 DOWNTO 0);
    VARIABLE cast_1 : signed(45 DOWNTO 0);
    VARIABLE cast_2 : signed(14 DOWNTO 0);
    VARIABLE mul_temp_4 : signed(28 DOWNTO 0);
    VARIABLE sub_cast_4 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_5 : signed(29 DOWNTO 0);
    VARIABLE mul_temp_5 : signed(27 DOWNTO 0);
    VARIABLE sub_cast_6 : signed(29 DOWNTO 0);
    VARIABLE sub_temp_1 : signed(29 DOWNTO 0);
    VARIABLE cast_3 : signed(14 DOWNTO 0);
    VARIABLE mul_temp_6 : signed(44 DOWNTO 0);
    VARIABLE cast_4 : signed(43 DOWNTO 0);
  BEGIN
    --HDL code generation from MATLAB function: UpdateFlow_pipeline1_fixpt
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --           Generated by MATLAB 9.7 and Fixed-Point Designer 6.4           %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    ----------------------------------------------
    mul_temp := data_in_1_1 * data_in_3_1;
    sub_cast := signed(resize(mul_temp & '0' & '0' & '0' & '0', 34));
    mul_temp_0 := data_in_2_1 * data_in_2_1;
    sub_cast_0 := resize(mul_temp_0, 34);
    sub_temp := sub_cast - sub_cast_0;
    add_cast := resize(sub_temp & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 47);
    b1 := add_cast + to_signed(8388, 47);
    IF b1 = to_signed(0, 47) THEN 
      tmp := signed'("0111111111111111111111111111111111111111111111111");
    ELSE 
      IF b1 = 0 THEN 
        div_temp := C_divbyzero_p;
      ELSE 
        div_temp := One / b1;
      END IF;
      tmp := div_temp;
    END IF;
    idet := unsigned(tmp(33 DOWNTO 20));
    cast := signed(resize(data_in_1_1, 15));
    mul_temp_1 := cast * data_in_5_1;
    sub_cast_1 := mul_temp_1(27 DOWNTO 0);
    sub_cast_2 := resize(sub_cast_1 & '0' & '0' & '0', 32);
    mul_temp_2 := data_in_2_1 * data_in_4_1;
    sub_cast_3 := resize(mul_temp_2, 32);
    sub_temp_0 := sub_cast_2 - sub_cast_3;
    cast_0 := signed(resize(idet, 15));
    mul_temp_3 := sub_temp_0 * cast_0;
    cast_1 := mul_temp_3(45 DOWNTO 0);
    dx_tmp <= cast_1(27 DOWNTO 14);
    cast_2 := signed(resize(data_in_3_1, 15));
    mul_temp_4 := cast_2 * data_in_4_1;
    sub_cast_4 := mul_temp_4(27 DOWNTO 0);
    sub_cast_5 := resize(sub_cast_4 & '0', 30);
    mul_temp_5 := data_in_2_1 * data_in_5_1;
    sub_cast_6 := resize(mul_temp_5, 30);
    sub_temp_1 := sub_cast_5 - sub_cast_6;
    cast_3 := signed(resize(idet, 15));
    mul_temp_6 := sub_temp_1 * cast_3;
    cast_4 := mul_temp_6(43 DOWNTO 0);
    dy_tmp <= cast_4(25 DOWNTO 12);
  END PROCESS UpdateFlow_pipeline1_fixpt_1_output;


  dx <= std_logic_vector(dx_tmp);

  dy <= std_logic_vector(dy_tmp);

  ce_out <= clk_enable;

END rtl;

